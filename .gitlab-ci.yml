default:
  image: nikolaik/python-nodejs:python3.9-nodejs16

.coverage_artifacts: &coverage_artifacts
  artifacts:
    paths:
      - coverage.xml
.py_machine_update: &py_machine_update
  before_script:
    - apt -y update
    - DEBIAN_FRONTEND=noninteractive apt -y install apt-utils net-tools
    - apt -y upgrade
    - pip3 install -r requirements.txt

.django_before_script: &django_before_script |-
  pip install --cache-dir /cache -r requirements.txt
  python manage.py makemigrations
  python manage.py migrate
  python manage.py collectstatic --no-input

stages:
  - test
  - sonarqube
  - deploy

unit_testing:
  <<: *py_machine_update
  <<: *coverage_artifacts
  stage: test
  script:
    - python3 manage.py makemigrations
    - python3 manage.py migrate --database=testing
    - coverage run --omit="manage.py,cenmobackend/*,authuser/decorators.py,*migrations*" manage.py test
    - coverage report -m
    - coverage xml
  coverage: /^TOTAL.*\s+(\d+\%)$/

sonarqube-check:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner 
      -Dsonar.qualitygate.wait=true 
      -Dsonar.projectKey=$SONAR_PROJECT_KEY 
      -Dsonar.sources=. 
      -Dsonar.host.url=https://sonarqube.cs.ui.ac.id 
      -Dsonar.login=$SONAR_LOGIN 
      -Dsonar.branch.target=$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.coverage.exclusions=**/*manage.py,**/*asgi.py,**/*decorators.py,**/*wsgi.py,**/*settings.py

  allow_failure: true

# deploy_staging:
#   image: ruby:3.2.1
#   stage: deploy
#   before_script:
#     - apt-get update
#     - gem install bundler
#     - gem install dpl
#     - gem install faraday-net_http -v 2.1.0
#   script:
#     - export HEROKU_API_KEY=$HEROKU_API_KEY
#     - dpl --provider=heroku --app=cenmo-staging --api-key=$HEROKU_API_KEY
#     - export HEROKU_API_KEY=$HEROKU_API_KEY
#   environment:
#     name: staging
#     url: $HEROKU_APP_HOST_STAGING

#   only:
#     - staging


# deploy_main:
#   image: ruby:3.2.1
#   stage: deploy
#   before_script:
#     - apt-get update
#     - gem install bundler
#     - gem install dpl
#     - gem install faraday-net_http -v 2.1.0
#   script:
#     - export HEROKU_API_KEY=$HEROKU_API_KEY_2
#     - dpl --provider=heroku --app=cenmo-backend --api-key=$HEROKU_API_KEY_2
#     - export HEROKU_API_KEY=$HEROKU_API_KEY_2
#   environment:
#     name: main
#     url: $HEROKU_APP_HOST
#   only:
#     - main

deploy_staging:
  stage: deploy
  only:
    - staging-vercel
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt  --token=$VERCEL_TOKEN

deploy_main:
  stage: deploy
  only:
    - main
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN